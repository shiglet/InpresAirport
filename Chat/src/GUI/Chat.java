/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ConfigurationFile.Configuration;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.NetworkInterface;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sadik
 */
public class Chat extends javax.swing.JFrame {

    /**
     * Creates new form Chat
     */
    private static int LEAVE =5;
    private static int JOIN =1;
    private static int POST_QUESTION =2;
    private static int ANSWER_QUESTION =3;
    private static int POST_EVENT =4;
    private ChatConnexion con;
    private String login;
    public String ADRESSE;
    public int PORT_CHAT;
    private MulticastSocket socketGroupe;
    private InetAddress adresseGroupe;
    private String sep,end;
    ThreadReception thr;
    public Chat() {
        initComponents();
        chatJL.setModel(new DefaultListModel<String>());
        con = new ChatConnexion(this, rootPaneCheckingEnabled);
        this.setVisible(true);
        con.setVisible(true);
        if(con.getConnected()==false)
            System.exit(0);
        login = con.getLogin();
        loginJL.setText(login);
        ADRESSE = con.ADRESSE;
        PORT_CHAT = con.PORT_CHAT;
        Configuration config = new Configuration();
        sep = config.getPropertie("TRAME_SEPARATOR");
        end = config.getPropertie("END_TRAME");
        try
        {
            adresseGroupe = InetAddress.getByName(ADRESSE);
            socketGroupe = new MulticastSocket(PORT_CHAT);
            //InetAddress ia = InetAddress.getByName("192.168.43.33");
            //System.out.println((NetworkInterface.getByInetAddress(ia)).getName());
            //socketGroupe.setNetworkInterface(NetworkInterface.getByName("eth4"));//Vmware Interface
            socketGroupe.setNetworkInterface(NetworkInterface.getByName("wlan2"));//Wifi interface
            socketGroupe.joinGroup(adresseGroupe);
            thr = new ThreadReception(login, socketGroupe, chatJL,sep);
            thr.start();
            String msgDeb = JOIN+sep+"0"+sep+login+sep+login + " rejoint le groupe";
            DatagramPacket dtg = new DatagramPacket(msgDeb.getBytes(), msgDeb.length(),adresseGroupe, PORT_CHAT);
            socketGroupe.send(dtg);
            System.out.println("Message envoyé");
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        loginJL = new javax.swing.JLabel();
        repondreJB = new javax.swing.JButton();
        reponseJTF = new javax.swing.JTextField();
        typeJCMB = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatJL = new javax.swing.JList<>();
        arreterJB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Connecté en tant que : ");

        repondreJB.setText("Envoyer");
        repondreJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repondreJBActionPerformed(evt);
            }
        });

        typeJCMB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Question", "Reponse", "Evenement" }));

        jScrollPane2.setViewportView(chatJL);

        arreterJB.setText("Arrêter");
        arreterJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arreterJBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(typeJCMB, 0, 115, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reponseJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(repondreJB))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginJL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(arreterJB)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(loginJL))
                    .addComponent(arreterJB))
                .addGap(54, 54, 54)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reponseJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repondreJB)
                    .addComponent(typeJCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void repondreJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repondreJBActionPerformed
        // TODO add your handling code here:
        boolean error=false;
        if(!reponseJTF.getText().isEmpty())
        {
            String msgDeb="";
            String message = reponseJTF.getText();
            switch(typeJCMB.getSelectedItem().toString())
            {
                case "Question" : 
                    int tag = (int)(Math.random() * (50000-1)) + 1;
                    int type = POST_QUESTION;
                    int r = 0 + (int)(Math.random() * ((10000 - 0) + 1));
                    int messageH = hashage(message,r);
                    msgDeb = type+sep+"Q"+tag+sep+login+sep+message+sep+messageH+sep+r;
                    break;
                case "Evenement" : 
                    tag = (int)(Math.random() * (50000-1)) + 1;
                    type = POST_EVENT;
                    msgDeb = type+sep+"E"+tag+sep+login+sep+message;
                    break;
                    
                case "Reponse" : 
                    String ligne = chatJL.getSelectedValue();
                    if(ligne.charAt(0)=='Q')
                    {
                        String[] ligneSplit = ligne.split("#");
                        String t = ligneSplit[0];
                        type = ANSWER_QUESTION;
                        msgDeb = type+sep+t+sep+login+sep+message;
                    }
                    else
                    {
                        error = true;
                        JOptionPane.showMessageDialog(rootPane, "Le message séléctionné n'est pas une question !");
                    }
                    break;
            }
            if(!error)
            {
                System.out.println("Envoie de : "+msgDeb);
                DatagramPacket dtg = new DatagramPacket(msgDeb.getBytes(), msgDeb.length(),adresseGroupe, PORT_CHAT);
                try {
                    socketGroupe.send(dtg);
                } catch (IOException ex) {
                    Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println("Message"+msgDeb+" envoyé");
                reponseJTF.setText("");
            }
        }
    }//GEN-LAST:event_repondreJBActionPerformed

    private void arreterJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arreterJBActionPerformed
        // TODO add your handling code here:
        String msg = LEAVE+sep+"0"+sep+login+sep+login + " quitte le groupe";
        DatagramPacket dtg = new DatagramPacket(msg.getBytes(), msg.length(),adresseGroupe, PORT_CHAT);
        try
        {
            socketGroupe.send(dtg);
            thr.stop();
            socketGroupe.leaveGroup(adresseGroupe); 
            System.out.println("Après leaveGroup");
            socketGroupe.close();
            System.out.println("Après close");
        }
        catch (IOException e){ System.out.println("Erreur :-( : " + e.getMessage());}
        System.exit(0);
    }//GEN-LAST:event_arreterJBActionPerformed
    
    public int hashage(String s, int r)
    {
        int sum=0;
        for (int i = 0; i < s.length(); i++)
        {
            char c = s.charAt(i);
            sum = sum + (int) c;
        }
        sum = (sum + r % 67)*r;
        return sum;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton arreterJB;
    private javax.swing.JList<String> chatJL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel loginJL;
    private javax.swing.JButton repondreJB;
    private javax.swing.JTextField reponseJTF;
    private javax.swing.JComboBox<String> typeJCMB;
    // End of variables declaration//GEN-END:variables
}
