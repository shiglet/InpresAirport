/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application_airtrafficcontrollers;

import ConfigurationFile.Configuration;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sadik
 */
public class Client_AirTrafficControllers extends javax.swing.JFrame {


    /**
     * Creates new form Client_AirTrafficControllers
     */
    private Socket cliSocket;
    private Configuration config;
    public String end;
    public String sep;
    private int port_tower;
    private String host;
    private DataOutputStream dos;
    private DataInputStream dis;
    public static final int GET_FLY = 1;
    public static final int WARN_CHECKIN = 2;
    public static final int SUCCESS = 100;
    public static final int CHECK_BAGGAGE = 3;
    public static final int CHOOSE_FLY = 4;
    public static final int FAILED = 101;

    private Vector<String> columnNames ;
    private Vector<Vector<String>> vVols;
    public String CheckInIP;
    public int CheckinPort;
    public Client_AirTrafficControllers() {
        initComponents();
        config = new Configuration();
        host = config.getPropertie("TOWER_IP");
        CheckInIP = config.getPropertie("CHECKINIPURGENCE");
        port_tower = Integer.parseInt(config.getPropertie("PORT_TOWER"));
        CheckinPort = Integer.parseInt(config.getPropertie("CHECKIPORTURGENCE"));
        System.out.println("host = "+host+" port ="+port_tower);
        end = config.getPropertie("END_TRAME");
        sep = config.getPropertie("TRAME_SEPARATOR");
        columnNames= new Vector<String>();
        columnNames.add("idVol");
        columnNames.add("Destination");
        columnNames.add("Depart");
        columnNames.add("Heure depart");
        try 
        {
            cliSocket = new Socket(host,port_tower);
            dos = new DataOutputStream(cliSocket.getOutputStream());
            dis = new DataInputStream(cliSocket.getInputStream());
        } 
        catch (IOException ex)
        {
            Logger.getLogger(Client_AirTrafficControllers.class.getName()).log(Level.SEVERE, null, ex);
        }
        getFly();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        volsJT = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        volsJT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(volsJT);

        jButton1.setText("Choisir vol");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 842, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int idVol;
    public Date time;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        idVol = Integer.parseInt(vVols.get(volsJT.getSelectedRow()).get(0));
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss.SSS");
        try 
        {
            time = dateFormat.parse(vVols.get(volsJT.getSelectedRow()).get(3));
        } catch (ParseException ex)
        {
            Logger.getLogger(Client_AirTrafficControllers.class.getName()).log(Level.SEVERE, null, ex);
        }
        sendMessage(CHOOSE_FLY+sep+idVol+end);
        FinalizeFly fly = new FinalizeFly(this,true);
        fly.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client_AirTrafficControllers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client_AirTrafficControllers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client_AirTrafficControllers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client_AirTrafficControllers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client_AirTrafficControllers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable volsJT;
    // End of variables declaration//GEN-END:variables

    private void getFly() 
    {
        sendMessage(GET_FLY+end); 
        String message = readMessage();
        String[] messageSplit = message.split("\\"+sep);
        vVols = new Vector<Vector<String>>();
        if(Integer.parseInt(messageSplit[0]) == GET_FLY)
        {
            for(int i=1;i<messageSplit.length;i=i+4)
            {
                Vector<String> v = new Vector<String>();
                v.add(messageSplit[i]);
                v.add(messageSplit[i+1]);
                v.add(messageSplit[i+2]);
                v.add(messageSplit[i+3]);
                vVols.add(v);
            }
            volsJT.setModel(new DefaultTableModel(vVols,columnNames));
            
        }
        System.out.println(message);
    }
    public String readMessage()
    {
        StringBuffer message=new StringBuffer();
        try 
        {
            byte b;
            while ((b=dis.readByte())!= (byte)end.charAt(0) )
            {
                if (b!=end.charAt(0))
                    message.append((char) b);
            }

        } 
        catch (IOException ex) {
            Logger.getLogger(Client_AirTrafficControllers.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        return message.toString().trim();
    }
    public void sendMessage(String s)
    {
        try {
            dos.write(s.trim().getBytes());
            dos.flush();
        } catch (IOException ex) {
            Logger.getLogger(Client_AirTrafficControllers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
